import asyncio

from aiogram import executor
from asyncpg import Connection

from config import ADMIN_ID
from db import create_db

from loader import bot, db
from parser import parse
import aioschedule as schedule


class DBCommand:
    pool: Connection = db
    GET_VALUES_DB = "SELECT * FROM birzha WHERE status='New';"

    SET_OLD = "UPDATE birzha SET status='Old' WHERE id=$1"
    async def get_new_news(self):
        return await self.pool.fetch(self.GET_VALUES_DB)

    async def set_old(self, id):
        await self.pool.execute(self.SET_OLD, id)

db = DBCommand()

async def on_shutdown(dp):
    await bot.close()

async def send_news_birzha():
    await parse()

    news = await db.get_new_news()
    if news == []:
        return

    for item in news:

        text =f'üü¢ ${item[1]}\n' \
              f'<b>–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω:</b> {item[2]}\n' \
              f'<b>–î–æ–ª–∂–Ω–æ—Å—Ç—å:</b> {item[3]}\n' \
              f'<b>P:</b> {item[8]}\n' \
              f'<b>–î–∞—Ç–∞:</b> {item[4]}\n' \
              f'<b>–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞:</b> {item[5]}\n' \
              f'<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</b> {item[6]}\n' \
              f'<b>–ö—É–ø–ª–µ–Ω–æ –Ω–∞ —Å—É–º–º—É</b>: {item[7]}\n' \
              f'<b>–û—Å—Ç–∞–ª–æ—Å—å –∞–∫—Ü–∏–π</b>: {item[9]} –º–ª–Ω'

        if item[8] == 'Sale':
            text = f'üî¥ ${item[1]}\n' \
                   f'<b>–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω:</b> {item[2]}\n' \
                   f'<b>–î–æ–ª–∂–Ω–æ—Å—Ç—å:</b> {item[3]}\n' \
                   f'<b>P:</b> {item[8]}\n' \
                   f'<b>–î–∞—Ç–∞:</b> {item[4]}\n' \
                   f'<b>–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞:</b> {item[5]}\n' \
                   f'<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</b> {item[6]}\n' \
                   f'<b>–ü—Ä–æ–¥–∞–Ω–æ –Ω–∞ —Å—É–º–º—É</b>: {item[7]}\n' \
                   f'<b>–û—Å—Ç–∞–ª–æ—Å—å –∞–∫—Ü–∏–π</b>: {item[9]} –º–ª–Ω'
        await bot.send_message(ADMIN_ID, text)
        await db.set_old(item[0])
        await asyncio.sleep(10)


async def open_shedule():
    schedule.every(2).minutes.do(send_news_birzha)
    while True:
        await schedule.run_pending()
        await asyncio.sleep(10)

async def on_startup(dp):
    # –ü–æ–¥–æ–∂–¥–µ–º –ø–æ–∫–∞ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö...
    await create_db()
    await asyncio.sleep(20)
    asyncio.create_task(open_shedule())
    await bot.send_message(ADMIN_ID, "–Ø –∑–∞–ø—É—â–µ–Ω!")


if __name__ == '__main__':
    from handlers import dp

    executor.start_polling(dp, on_shutdown=on_shutdown, on_startup=on_startup, skip_updates=False)
